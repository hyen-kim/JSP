1.	프로젝트
- Servlet클래스 httpServlet 클래스를 상속 받음
 

- 요청처리객체 및 응답처리객체를 톰캣에서 받음
 
- GET & POST
 

 
2.	doGet()
- html내 form태그의 method속성이 get일 경우 호출 
- 웹브라우저의 주소창을 이용하여 servlet을 요청한 경우에도 호출 
- doGet메소드는 매개변수로 HttpServletRequest와 HttpServletResponse를 받음

            request (요청)
웹 브라우저 -------------------> 클라이언트
            -----------------
            response(처리)

3.	doPost()
- html내 form태그의 method속성이 post일 경우 호출
 

 
4.	Servlet 작동순서
- 클라이언트에서 servlet요청이 들어 오면 
  서버에서는 servlet컨테이너를 만들고, 요청이 있을 때마다 스레드 생성

웹브라우저 	->	웹서버		-> 	웹어플리케이션		->	Servlet컨테이너

- Servlet의 사용도가 높은 이유는 빠른 응답 속도 , 
 최초 요청 시 객체가 만들어져 메모리에 로딩되고, 이후 요청 시에는 기존의 객체를 재활용
- Servlet의 라이프 사이클중 init()과 destroy()메소드와 관련하여 
 선처리(init()전)와 후처리(destroy()후) 작업이 가능

1. Servlet 객체 생성			// 최초 한번
------------------------------------------------------------------------- 선처리 : @PostConstruct
2. init()호출				// 최초 한번
3. service(), doGet(), doPost() 호출		// 요청시 매번
4. destroy()호출				// 마지막 한번
------------------------------------------------------------------------- 후처리 : @PreDestroy
 
5.	HTML form태그
Html의 form태그는 서버쪽으로 정보를 전달할 때 사용하는 태그

-> input : 태그의 종류를 지정
   속성(type, name, value)
   type : 태그 종류 지정 (ex. Text, password, submit, checkbox, radio, reset)
   name : input 태그 이름
   value : name에 해당하는 값 (ex. Name=value)

<form action =		 “FormEx” 			method=”post”>
                 요청하는 컨포넌트 이름			요청을 처리하는 방식

